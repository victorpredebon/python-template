[project]
name = "python-template"
version = "0.1.0"
description = ""
authors = [{ name = "Victor Predebon", email = "predebonvictor@gmail.com" }]
readme = "README.md"
requires-python = ">=3.13"
dependencies = []


[tool.poetry.group.development.dependencies]
ruff = "^0.13.1"
pre-commit = "^4.3.0"
mypy = "^1.18.2"
pytest = "^8.4.2"
pytest-asyncio = "^1.2.0"
pytest-cov = "^7.0.0"


[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py313"
fix = true


[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "D",   # pydocstyle (D)
  "COM", # flake8-commas (COM)
  "Q",   # flake8-quotes (Q)
]
fixable = ["ALL"]


[tool.ruff.lint.per-file-ignores]
"**/tests/**.py" = [
  "ANN",     # flake8-annotations (ANN)
  "PLR2004", # Magic value used in comparison
  "S101",    # Use of `assert` detected
  "INP001",  # File is part of an implicit namespace package
]


[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = 88


[tool.ruff.lint.isort]
combine-as-imports = true
lines-after-imports = 2


[tool.ruff.lint.flake8-type-checking]
strict = true


[tool.mypy]
mypy_path = "src"


[tool.pytest.ini_options]
pythonpath = "src"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
branch = true
omit = ["**/tests/**"]

[tool.poetry]
package-mode = false


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
